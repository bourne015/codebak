<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<title>if_changed_rule/cc_o_c/any-prereq/arg-check - lcw_202的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="description" content="Makefile 对应内核版本：2.6.35.13在 scripts/Makefile.build 的 86 行看到 builtin-target 的定义：1builtin-target :=$(obj)/built-in.o">
<script src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ga.js" async="" type="text/javascript"></script><script src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/jquery.js" type="text/javascript"></script>
<script src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/plugins.js" type="text/javascript"></script>
<script src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/common.js" type="text/javascript"></script>
<link rel="Stylesheet" type="text/css" href="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/style.css">
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/lcw_202/rss/list">
<link rel="shortcut icon" href="http://blog.csdn.net/favicon.ico">
<link type="text/css" rel="stylesheet" href="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/default.css">
</head>
<body>
<script src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/pub_topnav_2011.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/navtop_2012.css">
<div class="nav_top_2011">
<p><span style="color:red;">您还未登录！</span>|<a href="https://passport.csdn.net/account/login">登录</a>|<a href="https://passport.csdn.net/account/register">注册</a>|<a href="https://passport.csdn.net/help/faq">帮助</a></p><ul>
<li><a href="http://www.csdn.net/" target="_blank">首页</a></li>
<li><a href="http://news.csdn.net/" target="_blank">业界</a></li>
<li><a href="http://mobile.csdn.net/" target="_blank">移动</a></li>
<li><a href="http://cloud.csdn.net/" target="_blank">云计算</a></li>
<li><a href="http://sd.csdn.net/" target="_blank">研发</a></li>
<li><a href="http://bbs.csdn.net/" target="_blank">论坛</a></li>
<li><a href="http://blog.csdn.net/" target="_blank">博客</a></li>
<li><a href="http://download.csdn.net/" target="_blank">下载</a></li>
<li class="more"><h2 id="topnav_btnmore" onclick="showNavMore(this)"><a href="javascript:void(0);">更多</a></h2>
<div id="topnav_hidlist">
<iframe name="nav_frm" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/a.htm" frameborder="no" height="178" scrolling="no" width="92"></iframe>
</div>
</li>
</ul>
</div>


<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="http://blog.csdn.net/lcw_202">lcw_202的专栏</a></h1>
            <h2></h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="http://blog.csdn.net/lcw_202?viewmode=contents"><span><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/lcw_202?viewmode=list"><span><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/lcw_202/rss/list"><span><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "lcw_202";
    var blog_address = "http://blog.csdn.net/lcw_202";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>
        
<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="http://blog.csdn.net/csdnproduct/article/details/7863031" target="_blank">
<font color="red">新版论坛系列介绍之二——功能介绍篇</font></a>


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;


<a href="http://blog.csdn.net/blogdevteam/article/details/7863508" target="_blank">
<font color="red">2012 SDCC门票社区团购火热开启！</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;


<a href="http://blog.csdn.net/csdnproduct/article/details/7868152" target="_blank">
<font color="red">公告：CSDN博客频道博客搬家功能上线！</font></a>

<br>

<a href="http://mdcc.csdn.net/" target="_blank">
<font color="blue">移动盛会强档来袭，参会套票全线秒杀！ 
 </font></a>

&nbsp;&nbsp;


<a href="http://blog.csdn.net/blogdevteam/article/details/7867718" target="_blank">
<font color="red">没有重量只有质量：iPad版《程序员杂志》应用上线 </font></a>

&nbsp;&nbsp;


<a href="http://blog.csdn.net/blogdevteam/article/details/7838383" target="_blank">
<font color="blue">“我最喜欢的技术博客”获奖公布！ </font></a>

</div><script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad.js"></script>

<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Repost"></span>
    <h3>
        <span class="link_title"><a href="http://blog.csdn.net/lcw_202/article/details/6660957">
        if_changed_rule/cc_o_c/any-prereq/arg-check
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/lcw_202/article/category/859006">Linux kernelBuild</a> 
        </span>
    <span class="link_postdate">2011-08-04 19:43</span>
    <span class="link_view" title="阅读次数">64人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments">评论</a>(0)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('if_changed_rule/cc_o_c/any-prereq/arg-check','6660957');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report" onclick="javascript:report(6660957,2);return false;" title="举报">举报</a></span>
    
</div>

    
<div id="article_content" class="article_content">

Makefile 对应内核版本：2.6.35.13<br>
在 scripts/Makefile.build 的 86 行看到 builtin-target 的定义：<br>
<div>
<div id="highlighter_610343" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile functions">builtin</code><code class="Makefile plain">-target :=</code><code class="Makefile variable">$(obj)</code><code class="Makefile plain">/built-in</code><code class="Makefile plain">.o</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
builtin-target 是一个 builtin-in.o 文件。在 297 行中看到：<br>
<div>
<div id="highlighter_643704" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile variable">$(builtin-target)</code><code class="Makefile plain">:</code><code class="Makefile variable">$(obj-y)</code><code class="Makefile plain">FORCE</code></div>
<div class="line number2 index1 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">call</code><code class="Makefile plain">if_changed,link_o_target)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
由此可见 builtin-in.o 文件依赖于各个&nbsp;&nbsp;obj-y 。obj-y 定义在要编译的子目录的 Makefile 中，这些 Makefile 文件在 Makefile.build 的 43-44 行做了包含：<br>
<div>
<div id="highlighter_946658" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile plain">kbuild-</code><code class="Makefile functions">file</code><code class="Makefile plain">:= $(</code><code class="Makefile functions bold">if</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">wildcard</code><code class="Makefile variable">$(kbuild-dir)</code><code class="Makefile plain">/Kbuild</code><code class="Makefile plain">),</code><code class="Makefile variable">$(kbuild-dir)</code><code class="Makefile plain">/Kbuild</code><code class="Makefile plain">,</code><code class="Makefile variable">$(kbuild-dir)</code><code class="Makefile plain">/Makefile</code><code class="Makefile plain">)</code></div>
<div class="line number2 index1 alt1"><code class="Makefile keyword bold">include</code><code class="Makefile variable">$(kbuild-file)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>比如在 init 目录下可以看到 obj-y 的一行定义：</p>
<table border="0" cellpadding="0" cellspacing="0" height="23" width="368">
<tbody>
<tr>
</tr>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code" style="background-color:rgb(0,153,0)">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile plain">obj-y&nbsp;&nbsp;&nbsp; := main.o version.o mounts.o</code></div>
</div>
</td>
</tr>
</tbody>
</table>
上面的这些 .o 文件又由 Makefile.build 中的 229-231 这几行的规则编译而成：
<div>
<div id="highlighter_526966" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code" style="background-color:rgb(0,153,0)">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile variable">$(obj)</code><code class="Makefile plain">/%.o:</code><code class="Makefile variable">$(src)</code><code class="Makefile plain">/%.c FORCE</code></div>
<div class="line number2 index1 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">call</code><code class="Makefile plain">cmd,force_checksrc)</code></div>
<div class="line number3 index2 alt2"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">call</code><code class="Makefile plain">if_changed_rule,cc_o_c)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
实际上就是将对应的 .c 文件编译成 .o 文件。如果都所有的 .c 文件都已经编译为相应的 .o 文件，那么就会由 Makefile.build 中的第 298 行命令将这些 .o 文件链接成 built-in.o 文件。<br>
<br>
这里先分析 <strong>if_changed_rule</strong> 和 <strong>cc_o_c</strong> 的实现：<br>
<br>
if_changed_rule 定义在 scripts/Kbuild.include 的 220-222 行中：<br>
<div>
<div id="highlighter_831825" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile plain">if_changed_rule = $(</code><code class="Makefile functions bold">if</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">strip</code><code class="Makefile variable">$(any-prereq)</code><code class="Makefile variable">$(arg-check)</code><code class="Makefile plain">),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 \</code></div>
<div class="line number2 index1 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">@</code><code class="Makefile functions">set</code><code class="Makefile plain">-e;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 \</code></div>
<div class="line number3 index2 alt2"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(rule_</code><code class="Makefile variable">$(1)</code><code class="Makefile plain">))</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
这里看到 <strong>arg-check</strong>&nbsp;&nbsp;和 <strong>any-prereq</strong> 两个变量，它们分别定义在 scripts/Kbuild.include&nbsp;&nbsp;的 188 和 200 行中：<br>
<div>
<div id="highlighter_508914" class="syntaxhighlighter  Makefile">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile plain">arg-check = $(</code><code class="Makefile functions bold">strip</code><code class="Makefile plain">$(</code><code class="Makefile functions">filter-out</code><code class="Makefile plain">$(cmd_</code><code class="Makefile variable">$(1)</code><code class="Makefile plain">),
 $(cmd_</code><code class="Makefile preprocessor bold">$@</code><code class="Makefile plain">)) \</code></div>
<div class="line number2 index1 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(</code><code class="Makefile functions">filter-out</code><code class="Makefile plain">$(cmd_</code><code class="Makefile preprocessor bold">$@</code><code class="Makefile plain">),&nbsp;&nbsp;
 $(cmd_</code><code class="Makefile variable">$(1)</code><code class="Makefile plain">)) )</code></div>
<div class="line number3 index2 alt2"><code class="Makefile plain">... ...</code></div>
<div class="line number4 index3 alt1"><code class="Makefile plain">any-prereq = $(</code><code class="Makefile functions">filter-out</code><code class="Makefile variable">$(PHONY)</code><code class="Makefile plain">,</code><code class="Makefile preprocessor bold">$?</code><code class="Makefile plain">)
 $(</code><code class="Makefile functions">filter-out</code><code class="Makefile variable">$(PHONY)</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">wildcard</code><code class="Makefile preprocessor bold">$^</code><code class="Makefile plain">),</code><code class="Makefile preprocessor bold">$^</code><code class="Makefile plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
在 any-prereq 中，$? 表示所有比目标还要新的依赖文件；$^ 表示所有的依赖文件。<br>
<br>
在 any-prereq 中，首先使用 $(filter-out $(PHONY),$?) 将 $? 中的所有伪目标去掉，不然可能会将 
FORCE 这种目标也带进来，如果此时返回非空，那么说明有比目标还要新的依赖文件。$(wildcard $^) 
匹配当前目录下的所有依赖文件(已经存在的)，然后再使用 $(filter-out $(PHONY) $(wildcard $^),$^) 
将伪目标以及当前目录下匹配的文件列表从整个 $^ 列表中删除，如果返回不为空，那么说明某些依赖文件不存在，也就是说这些不存在的依赖文件还没生成
 -- 这是因为某些依赖文件需要在编译时才会生成。<br>
<br>
在 arg-check 中，$(1) 表示第 1 个参数，比如上面的 $(call if_changed_rule,cc_o_c) 中，$(1)
 就是 cc_o_c ，所以 $(cmd_$(1) 就是表示 cmd_cc_o_c -- 这个变量可以在 Makefile.build 中的 
179 或 194 行看到定义。它实际上表示的是这一次编译文件时所用到的命令行参数。<br>
<br>
<p><span style="color:#000099"><span style="background-color:rgb(255,255,255)">$@
 表示目标文件，从上面叙述可知，它就是 $(obj)/%.o 。比如编译 init/main.o ，那么 $(cmd_$@) 就是表示 
$(cmd_init/main.o)，而在 init/.main.o.cmd 文件中我们看到了 cmd_init/main.o 
用来保存着上次编译的参数。</span></span>在 arg-check 中，首先使用
 $(filter-out $(cmd_$(1)), $(cmd_$@)) 将上一次的编译参数中过略掉本次要编译的参数，再用 
$(filter-out $(cmd_$@),&nbsp;&nbsp; $(cmd_$(1))) 
将本次的编译参数中过滤掉上一次的编译参数。正反过滤的原因是，filter-out 函数在过滤时，如果第 2 个参数是第 1 
个参数的子集或者是相同，那么返回空；所以，在第 1 次过滤时如果返回为空，那么 cmd_$@ 可能是等于 cmd_$(1) 
的，也可能是它的子集，所以只有当再次反过来做过滤时发现返回为空，那么才能判断两次编译的参数是相等的，否则是不等的。<span style="color:#000099">如果返回结果不为空，说明编译参数发生了变化，那么就会执行
 $(rule_cc_o_c) 。</span></p>
<p><span title="2011-07-18 11:19"></span><br>
if_changed 定义在 scripts/Kbuild.include 中：<br>
</p>
<div>
<div id="highlighter_141117" class="syntaxhighlighter  Makefile">
<div class="toolbar"><span><a href="http://www.groad.net/bbs/#" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0" height="100" width="523">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile comments"># Execute command if command has changed or prerequisite(s) are updated.</code></div>
<div class="line number2 index1 alt1"><code class="Makefile comments">#</code></div>
<div class="line number3 index2 alt2"><code class="Makefile plain">if_changed = $(</code><code class="Makefile functions bold">if</code>
<code class="Makefile plain">$(</code><code class="Makefile functions bold">strip</code>
<code class="Makefile variable">$(any-prereq)</code> <code class="Makefile variable">
$(arg-check)</code><code class="Makefile plain">),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 \</code></div>
<div class="line number4 index3 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">@</code><code class="Makefile functions">set</code>
<code class="Makefile plain">-e;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 \</code></div>
<div class="line number5 index4 alt2"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile variable">$(echo-cmd)</code>
<code class="Makefile plain">$(cmd_</code><code class="Makefile variable">$(1)</code><code class="Makefile plain">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 \</code></div>
<div class="line number6 index5 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile functions">echo</code>
<code class="Makefile string">'cmd_$@ := $(make-cmd)'</code> <code class="Makefile plain">
&gt; </code><code class="Makefile variable">$(dot-target)</code><code class="Makefile plain">.cmd)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
if_changed 函数在当发现规则的依赖有更新，或者是对应目标的命令行参数发生改变时($(strip $(any-prereq) $(arg-check)) 语句结果不为空)，执行后面的语句。<br>
<br>
<a href="http://www.groad.net/bbs/read.php?tid-3619.html" target="_blank" id="url_1">set</a> -e 表示如果命令执行有错那么命令停止执行并退出。<br>
<br>
接着 <a href="http://www.groad.net/bbs/read.php?tid-4128.html" target="_blank" id="url_2">
$(echo-cmd)</a> 用来打印出相关的编译命令，接着执行 $(cmd_$(1) 里的命令。<br>
<br>
最后 <span style="color:#000099">echo 'cmd_$@ := $(make-cmd)' &gt; $(dot-target).cmd 将上面执行的命令写入一个叫 $(dot-target).cmd 的文件中</span>，该文件为隐藏文件，在编译后的内核源码目录及其子目录下随处可见，比如在 init/ 下可以看到 .initramfs.o.cmd， .version.o.cmd 等等。<br>
<br>
比如下面的 if_changed 的用法：<br>
<div>
<div id="highlighter_87006" class="syntaxhighlighter  Makefile">
<div class="toolbar"><span><a href="http://www.groad.net/bbs/#" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile plain">.tmp_vmlinux2:
</code><code class="Makefile variable">$(vmlinux-lds)</code> <code class="Makefile variable">
$(vmlinux-all)</code> <code class="Makefile plain">.tmp_kallsyms1.o FORCE</code></div>
<div class="line number2 index1 alt1"><code class="Makefile spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="Makefile plain">$(</code><code class="Makefile functions bold">call</code>
<code class="Makefile plain">if_changed,vmlinux__)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
<span style="color:#000099">如果目标的依赖或者命令参数已经改变，那么将执行 cmd_vmlinux__ 
所代表的新命令。那么这里可能会想到，在新老命令的比较中，老命令是从何而来？正如上面所分析的，老命令正是被写入到 
$(dot-target).cmd 文件中的；这样一来，在 Makefile 中肯定有一处是将这些保存了老命令的文件包含进来的语句。在顶层 
Makefile 中的 1481-1489 行可以看到：</span><br>
<div>
<div id="highlighter_429850" class="syntaxhighlighter  Makefile">
<div class="toolbar"><span><a href="http://www.groad.net/bbs/#" class="toolbar_item command_help help">?</a></span></div>
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter" style="background-color:rgb(0,153,0)">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code" style="background-color:rgb(0,153,0)">
<div class="container">
<div class="line number1 index0 alt2"><code class="Makefile comments"># read all saved command lines</code></div>
<div class="line number2 index1 alt1">&nbsp;</div>
<div class="line number3 index2 alt2"><code class="Makefile plain">targets := $(</code><code class="Makefile functions bold">wildcard</code>
<code class="Makefile plain">$(</code><code class="Makefile functions">sort</code>
<code class="Makefile variable">$(targets)</code><code class="Makefile plain">))</code></div>
<div class="line number4 index3 alt1"><code class="Makefile plain">cmd_files := $(</code><code class="Makefile functions bold">wildcard</code>
<code class="Makefile plain">.*.cmd $(</code><code class="Makefile functions bold">foreach</code>
<code class="Makefile plain">f,</code><code class="Makefile variable">$(targets)</code><code class="Makefile plain">,$(</code><code class="Makefile functions">dir</code>
<code class="Makefile variable">$(f)</code><code class="Makefile plain">).$(notdir
</code><code class="Makefile variable">$(f)</code><code class="Makefile plain">).cmd))</code></div>
<div class="line number5 index4 alt2">&nbsp;</div>
<div class="line number6 index5 alt1"><code class="Makefile keyword bold">ifneq</code>
<code class="Makefile plain">(</code><code class="Makefile variable">$(cmd_files)</code><code class="Makefile plain">,)</code></div>
<div class="line number7 index6 alt2"><code class="Makefile spaces">&nbsp;&nbsp;</code><code class="Makefile variable">$(cmd_files)</code><code class="Makefile plain">: ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</code><code class="Makefile comments"># Do not try to update included dependency files</code></div>
<div class="line number8 index7 alt1"><code class="Makefile spaces">&nbsp;&nbsp;</code><code class="Makefile keyword bold">include</code>
<code class="Makefile variable">$(cmd_files)</code></div>
<div class="line number9 index8 alt2"><code class="Makefile keyword bold">endif</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
在目录 scripts/ 下，像在 Makefile.build、Makefile.headersinst、Makefile.modpost 以
 及Makefile.fwinst 等文件中，也可以看到类似的读入语句。但这并不冲突，因为顶层 Makefile 
和它们独立运作，变量间互不干扰。<br>
<p></p>

</div>
<div class="share_buttons" id="sharePanel"><span>分享到：</span> <a name="sina" class="share_sina" title="分享到新浪微博"></a><a name="qq" class="share_qq" title="分享到腾讯微博"></a></div>
<!--192.168.1.237-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="http://blog.csdn.net/lcw_202/article/details/6656976">Makefile中的+/- 符号</a></li>
    <li class="next_article"><span>下一篇：</span><a href="http://blog.csdn.net/lcw_202/article/details/6661352">vmlinux-init, vmlinux-main</a></li>
</div>


    
</div>
<div id="ad_cen"><iframe src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad.htm" style="border-width: 0px; overflow: hidden; width: 732px; height: 92px;" id="ad_frm_0" frameborder="0" scrolling="no"></iframe></div>
<script type="text/javascript">
    new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"><br>&nbsp;&nbsp;暂无评论<br><br><div class="clear"></div></div>
<div id="comment_bar"></div>
<div id="comment_form"><div class="guest_link">您还没有登录,请<a href="http://passport.csdn.net/account/login?from=http%3A%2F%2Fblog.csdn.net%2Flcw_202%2Farticle%2Fdetails%2F6660957">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Flcw_202%2Farticle%2Fdetails%2F6660957">[注册]</a></div></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '6660957';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/comment.js"></script>
<div id="ad_bot"><iframe src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad_002.htm" style="border-width: 0px; overflow: hidden; width: 732px; height: 170px;" id="ad_frm_1" frameborder="0" scrolling="no"></iframe></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>


<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="panel_Profile" class="panel">
    <ul class="panel_head"><span>个人资料</span></ul>
    <ul class="panel_body profile">
        <div id="blog_userface">
            <a href="http://my.csdn.net/lcw_202" target="_blank">
            <img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/1_lcw_202.jpg" title="访问我的空间" style="max-width:90%">
            </a>
            <br>
            <span><a href="http://my.csdn.net/lcw_202" target="_blank">lcw_202</a></span>
        </div>
<div class="interact">
<!--<a href="#" class="attented" title="已关注"></a>-->
<a href="#" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="http://my.csdn.net/my/letter/send/lcw_202" class="letter" title="[发私信]"></a>
</div>
        <div id="blog_medal">
        <div id="bms_box"></div></div>
        <ul id="blog_rank">
            <li>访问：<span>36113次</span></li>
            <li>积分：<span>1092分</span></li>
            <li>排名：<span>第6899名</span></li>
        </ul>
        <ul id="blog_statistics">
            <li>原创：<span>49篇</span></li>
            <li>转载：<span>158篇</span></li>
            <li>译文：<span>0篇</span></li>
            <li>评论：<span>9条</span></li>
        </ul>
    </ul>
</div>
<script type="text/javascript">
    var _blogger = 'lcw_202';
</script>
<script type="text/javascript">
$(document).ready(function () {
    var un = getUN().toLowerCase();
    if (un == _blogger.toLowerCase()) {
        $('.interact').hide();
    } else if(un) {
        var url = "http://my.csdn.net/index.php/follow/check_is_followed/" + encodeURIComponent(un) + "/" + encodeURIComponent(_blogger) + "?jsonpcallback=?";
        $.getJSON(url, {}, function (data) {
            if (data.succ == 1 && data.info == 1) {
                $('#span_add_follow').attr('class', 'attented');
            } else {
                $('#span_add_follow').click(guanzhu);
            }
        }, 'json');
    }
});
function guanzhu() {
    var url = "http://my.csdn.net/index.php/follow/do_follow?jsonpcallback=?";
    $.getJSON(url, { "username": _blogger }, function (data) {
        if (data.succ == 1) {
            alert('关注成功！');
            $('#span_add_follow').attr('class', 'attented').click(function () { return false; });
        } else {
            alert(data.msg);
        }
    });
    return false;
}
function getUN() {
    var m = document.cookie.match(new RegExp("(^| )UserName=([^;]*)(;|$)"));
    if (m) return m[2];
    else return '';
}
</script>

<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" class="blogsearch" title="请输入关键字" type="text"></span>
        <input id="btnSubmit" value="搜索" title="search in blog" type="submit">
        <input name="q" id="inputQ" type="hidden">
        <input name="t" value="blog" type="hidden">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
    <ul class="panel_head"><span>文章分类</span></ul>
    <ul class="panel_body">
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/771777">Git</a><span>(5)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/775009">Linux kernel VFS</a><span>(5)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/745133">Linux kernel 相关</a><span>(26)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/674778">Linux 内存管理</a><span>(36)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/752682">Linux 文件系统</a><span>(5)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/756193">Linux 进程管理</a><span>(12)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/751446">Linux 进程间通信</a><span>(14)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/919044">Linux Network</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/859006">Linux kernelBuild</a><span>(10)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/871284">Linux 启动</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/746553">Linux应用</a><span>(10)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/658105">C语言、算法与数据结构</a><span>(14)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/715237">GTK</a><span>(1)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/751112">SBwindows</a><span>(2)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/625197">Serial</a><span>(4)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/634887">Xlib</a><span>(6)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/709411">开发学习计划</a><span>(2)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/751134">网卡驱动</a><span>(7)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/756175">要读的文章</a><span>(3)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/769481">调试</a><span>(13)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/871241">汇编</a><span>(4)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/817536">bash+vim</a><span>(12)</span>
        </li>
        <li>
        <a href="http://blog.csdn.net/lcw_202/article/category/1068669">ftrace</a><span>(3)</span>
        </li>
    </ul>
</div><div id="custom_column_990476" class="panel">
    <ul class="panel_head"><span>Linux kernel</span></ul>
    <ul class="panel_body">
        
<ul>
<li><a href="http://blog.csdn.net/yunsongice/" target="_blank">云（存储），松（耦合）</a> </li><li><a href="http://liurugongzi.blog.sohu.com/entry/6032021/#entry" target="_blank">道恒无名</a>
</li><li><a href="http://blog.csdn.net/sodme/category/463184.aspx" target="_blank">大宝(sodme)的专栏</a>
</li><li><a href="http://blog.chinaunix.net/u3/95743/article_121116.html" target="_blank">少帅的天空</a>
</li><li><a href="http://blog.chinaunix.net/u1/38994/article_56615.html" target="_blank">gliethttp</a>
</li><li><a href="http://blog.chinaunix.net/u2/86301/article_122270_2.html" target="_blank">thewayma</a>
</li><li><a href="http://home.lupaworld.com/home-space-uid-56821-do-blog-view-me-page-3.html" target="_blank">ckhitler的个人空间
</a></li><li><a href="http://blog.csdn.net/caimouse/category/49656.aspx" target="_blank">大坡3D软件开发</a>
</li><li><a href="http://blog.csdn.net/jiangxinyu" target="_blank">jiangxinyu的专栏</a> </li><li><a href="http://hi.baidu.com/hypkb/blog" target="_blank">hyp Knowledge Base</a></li><li><a href="http://blog.csdn.net/absurd" target="_blank">li</a></li></ul>

    </ul>
</div><div id="custom_column_990475" class="panel">
    <ul class="panel_head"><span>Adroid</span></ul>
    <ul class="panel_body">
        
<ul>
<li><a href="http://www.android123.com.cn/androidkaifa/" target="_blank">Android开发网</a>
</li><li><a href="http://blog.csdn.net/absurd" target="_blank">李先静的文章</a> </li><li><a href="http://blog.csdn.net/rstevens" target="_blank">小马哥的博客</a> </li><li><a href="http://blog.csdn.net/RichardYSteven/category/475131.aspx" target="_blank">RichardYSteven的专栏</a>
</li><li><a href="http://blog.chinaunix.net/u1/51562/article.html" target="_blank">Linux内核学习
</a></li><li><a href="http://www.am82.com/houzan/archives/category/zhuanti/" target="_blank">葡萄树 On The Road — 一个会操作计算机的民工</a>
</li><li><a href="http://blog.chinaunix.net/u3/108840/article.html" target="_blank">涌泉闪闪@原创空间</a>
</li><li><a href="http://book.opensourceproject.org.cn/kernel/kernelpri/index.html?page=opensource/0131181637/ch04lev1sec4.html" target="_blank">www.opensourceproject.org.cn The Linux Kernel Primer</a>
</li><li><a href="http://blog.csdn.net/tq02h2a/default.aspx?PageNumber=4" target="_blank">Gilbert Wang的专栏</a>
</li></ul>

    </ul>
</div><div id="custom_column_990477" class="panel">
    <ul class="panel_head"><span>汇编</span></ul>
    <ul class="panel_body">
        
<ul>
<li><a href="http://www.drpaulcarter.com/" target="_blank">Paul Carter's Homepage
</a></li><li><a href="http://www.lingcc.com/category/tech/gcc_tech/" target="_blank">编译点滴</a>
</li><li><a href="http://blog.csdn.net/do2jiang/archive/2010/04/05/5450705.aspx" target="_blank">游手好弦 信步涂鸦</a>
</li><li><a href="http://tyujmnbg.blog.sohu.com/entry/5302022/#entry" target="_blank">Roxy的笔记本</a>
</li><li><a href="http://www.cnblogs.com/welfear/default.html?page=1" target="_blank">welfear的博客</a>
</li><li><a href="http://blog.chinaunix.net/u2/73521/article_97360.html" target="_blank">chinahhucai.cublog.cn</a>
</li><li><a href="http://blog.chinaunix.net/u/30686/article.html" target="_blank">飞翔,嵌入式linux性能优化
</a></li><li><a href="http://blog.csdn.net/li_guotao" target="_blank">li_guotao blog</a> </li><li><a href="http://www.newsmth.net/bbs0an.php?path=%2Fgroups%2Fcomp.faq%2FWindowsDriverDev" target="_blank">水木社区-驱动开发</a></li></ul>

    </ul>
</div><div id="panel_Archive" class="panel">
    <ul class="panel_head"><span>文章存档</span></ul>
    <ul class="panel_body">
        <div id="archive_list"><li><a href="http://blog.csdn.net/lcw_202/article/month/2012/04">2012年04月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2012/03">2012年03月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2012/02">2012年02月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2012/01">2012年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/11">2011年11月</a><span>(2)</span></li><span class="hidelist" style="display:none;"><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/10">2011年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/09">2011年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/08">2011年08月</a><span>(24)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/07">2011年07月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/06">2011年06月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/05">2011年05月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/04">2011年04月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/03">2011年03月</a><span>(19)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/02">2011年02月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2011/01">2011年01月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/12">2010年12月</a><span>(18)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/11">2010年11月</a><span>(65)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/10">2010年10月</a><span>(21)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/07">2010年07月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/04">2010年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2010/03">2010年03月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2009/12">2009年12月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/lcw_202/article/month/2009/11">2009年11月</a><span>(1)</span></li></span><div id="archive_list_button" class="list_closed">展开</div></div>
    </ul>
</div>
<div id="hotarticls" class="panel">
    <ul class="panel_head"><span>阅读排行</span></ul>
    <ul class="panel_body itemlist">
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/5970975" title="ubuntu 10.04 添加自启动脚本">ubuntu 10.04 添加自启动脚本</a><span>(1421)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/6065131" title="Ubuntu 上Gitweb安装指南">Ubuntu 上Gitweb安装指南</a><span>(1110)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/6094379" title="巧用backtrace系列函数，在不具备gdb环境的Linux系统上大致定位段错误位置">巧用backtrace系列函数，在不具备gdb环境的Linux系统上大致定位段错误位置</a><span>(980)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/5955783" title="页描述符与物理地址(相关主题帖子总结)">页描述符与物理地址(相关主题帖子总结)</a><span>(910)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/5993889" title="内核sem、wait_queue_head_t、timer和kernel_thread使用驱动范例">内核sem、wait_queue_head_t、timer和kernel_thread使用驱动范例</a><span>(890)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/5994406" title="TLB与cache的深入分析">TLB与cache的深入分析</a><span>(844)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/6024854" title="linux2.6.29 CFS调度详细分析(二)">linux2.6.29 CFS调度详细分析(二)</a><span>(616)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/5965912" title="ubuntu 10.04 U盘安装时，GRUB引导指令">ubuntu 10.04 U盘安装时，GRUB引导指令</a><span>(524)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/6633459" title="linux 顶层Makefile执行的流程">linux 顶层Makefile执行的流程</a><span>(524)</span>
        </li>
        <li>
            <a href="http://blog.csdn.net/lcw_202/article/details/7290483" title="调研内核调用栈方便的工具 kmalloc-top">调研内核调用栈方便的工具 kmalloc-top</a><span>(448)</span>
        </li>
    </ul>
</div>
<div id="homepageArticles" class="panel">
    <ul class="panel_head"><span>推荐文章</span></ul>
    <ul class="panel_body" id="ad_commend">
    <iframe src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad_003.htm" style="border-width: 0px; overflow: hidden; width: 182px; height: 260px;" id="ad_frm_2" frameborder="0" scrolling="no"></iframe></ul>
</div>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad.js"></script>
<script type="text/javascript">
    new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/6013164#comments">zone_watermark_ok</a>
    <p style="margin:0px;">firo_google:
这个讲解的比较合理：http://www.unixresources.net/linux/clf/l...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/5955783#comments">页描述符与物理地址(相关主题帖子总结)</a>
    <p style="margin:0px;">dzygd78n:
不错，这个解除了我的疑惑了！
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/7305122#comments">files_struct</a>
    <p style="margin:0px;">xulai1001:
新版内核里面使用了rcu锁。按您的分析，也就是说fdt一开始是指向files_struct里面原始的...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/7305122#comments">files_struct</a>
    <p style="margin:0px;">xulai1001:
很有用。新版内核的学习了！
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/6633459#comments">linux 顶层Makefile执行的流程</a>
    <p style="margin:0px;">yuanjie_123:
楼主谢谢您的分享,再此我有一些疑问想请教一下.$(CURDIR)/Makefile Makefile...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/6013164#comments">zone_watermark_ok</a>
    <p style="margin:0px;">wukui1008:
min &gt;&gt;= 1;这个地方请问是干嘛这样。。。
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/6178319#comments">git使用说明</a>
    <p style="margin:0px;">lcw_202:
Cloning the Wine Git repositorygit clone git://sou...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/6123347#comments">修改最后一次提交</a>
    <p style="margin:0px;">liuguo09:
6. git修改前几次commit的说明修改最近一次提交：git commit --amend修改更...
    </p>
    </li>
    <li>
    <a href="http://blog.csdn.net/lcw_202/article/details/5057200#comments">RS-232 维基百科，自由的百科全书</a>
    <p style="margin:0px;">匿名用户:
请问：用什么方法才能知道他们是：TXD RXD GND三根线，怎样识别，有的机顶盒RS232是排插，...
    </p>
    </li>
</ul>
</div>
</div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/shCore-src.js"></script>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ZeroClipboard.js"></script>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/article_code.js"></script>

<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/show.js"></script>
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/showblogmedal.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/pv.txt" border="0" height="0" width="0">

<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/publib_footer.js"></script><link rel="stylesheet" type="text/css" href="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/pub_footer_2012.css"><div class="pub_footerall"><dl><dt></dt> <dd><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a>|<a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a>|<a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a>|<a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a>|<a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a>|<a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a>|<a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a>|<a href="mailto:webmaster@csdn.net">问题报告</a></dd><dd>京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</dd><dd>北京创新乐知信息技术有限公司 版权所有</dd><dd><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ico_email.gif" alt="" title=""> 联系邮箱：webmaster@csdn.net</dd><dd>Copyright © 1999-2012, CSDN.NET, All Rights Reserved&nbsp;<a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div>

<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/counter.js"></script><script type="text/javascript" charset="UTF-8" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/msg.js"></script>

<!--ad.csdn.net-->
<script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad-blog.js"></script><script type="text/javascript" src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/ad-ibm16.js"></script>




</div>

<iframe src="if_changed_rule%20cc_o_c%20any-prereq%20arg-check_files/log.swf" style="width: 1px; height: 1px; position: absolute; visibility: hidden;"></iframe></body></html>